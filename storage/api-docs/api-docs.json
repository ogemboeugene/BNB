{
    "openapi": "3.0.0",
    "info": {
        "title": "BNB Management API",
        "description": "Professional BNB Management System API with JWT Authentication",
        "version": "1.0.0"
    },
    "servers": [
        {
            "url": "http://localhost:8000/api/v1",
            "description": "Local Development Server"
        },
        {
            "url": "https://f590492a3ec0.ngrok-free.app/api/v1",
            "description": "Public Tunnel (ngrok)"
        }
    ],
    "paths": {
        "/admin/users": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get all users (Admin only)",
                "description": "Retrieve paginated list of all platform users with their details.",
                "operationId": "getAdminUsers",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Users retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Users retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "integer",
                                                                "example": 1
                                                            },
                                                            "name": {
                                                                "type": "string",
                                                                "example": "John Doe"
                                                            },
                                                            "email": {
                                                                "type": "string",
                                                                "example": "john@example.com"
                                                            },
                                                            "role": {
                                                                "type": "string",
                                                                "example": "user"
                                                            },
                                                            "email_verified_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-08T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 75
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied (Admin role required)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/users/{user}/role": {
            "patch": {
                "tags": [
                    "Admin"
                ],
                "summary": "Update user role (Admin only)",
                "description": "Update the role of a specific user. Allows promotion to admin or demotion to regular user.",
                "operationId": "updateUserRole",
                "parameters": [
                    {
                        "name": "user",
                        "in": "path",
                        "description": "User ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "role"
                                ],
                                "properties": {
                                    "role": {
                                        "type": "string",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "admin"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "User role updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User role updated successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "id": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "name": {
                                                    "type": "string",
                                                    "example": "John Doe"
                                                },
                                                "email": {
                                                    "type": "string",
                                                    "example": "john@example.com"
                                                },
                                                "role": {
                                                    "type": "string",
                                                    "example": "admin"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied (Admin role required)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/admin/stats": {
            "get": {
                "tags": [
                    "Admin"
                ],
                "summary": "Get platform statistics (Admin only)",
                "description": "Retrieve comprehensive platform statistics including user counts, property metrics, and system health.",
                "operationId": "getAdminStats",
                "responses": {
                    "200": {
                        "description": "Admin statistics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Admin statistics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "users": {
                                                    "properties": {
                                                        "total_users": {
                                                            "type": "integer",
                                                            "example": 150
                                                        },
                                                        "admin_users": {
                                                            "type": "integer",
                                                            "example": 3
                                                        },
                                                        "verified_users": {
                                                            "type": "integer",
                                                            "example": 120
                                                        },
                                                        "new_users_this_month": {
                                                            "type": "integer",
                                                            "example": 25
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "properties": {
                                                    "properties": {
                                                        "total_bnbs": {
                                                            "type": "integer",
                                                            "example": 45
                                                        },
                                                        "active_bnbs": {
                                                            "type": "integer",
                                                            "example": 38
                                                        },
                                                        "featured_bnbs": {
                                                            "type": "integer",
                                                            "example": 6
                                                        },
                                                        "average_rating": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "reviews": {
                                                    "properties": {
                                                        "total_reviews": {
                                                            "type": "integer",
                                                            "example": 234
                                                        },
                                                        "verified_reviews": {
                                                            "type": "integer",
                                                            "example": 180
                                                        },
                                                        "average_rating": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.3
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "support": {
                                                    "properties": {
                                                        "total_tickets": {
                                                            "type": "integer",
                                                            "example": 67
                                                        },
                                                        "open_tickets": {
                                                            "type": "integer",
                                                            "example": 12
                                                        },
                                                        "resolved_tickets": {
                                                            "type": "integer",
                                                            "example": 55
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied (Admin role required)",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/register": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Register a new user",
                "description": "Create a new user account and return authentication token",
                "operationId": "8f20688904ee49d0d8739eeb08faf0b1",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "email",
                                    "password",
                                    "password_confirmation"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "maxLength": 255,
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "password_confirmation": {
                                        "type": "string",
                                        "minLength": 8,
                                        "example": "password123"
                                    },
                                    "role": {
                                        "type": "string",
                                        "default": "user",
                                        "enum": [
                                            "admin",
                                            "user"
                                        ],
                                        "example": "user"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "User registered successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User registered successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "1|eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 2592000
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Registration failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/login": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User login",
                "description": "Authenticate user and return access token",
                "operationId": "985cd5203e2d0a820e113f2f4fdb2847",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "email",
                                    "password"
                                ],
                                "properties": {
                                    "email": {
                                        "type": "string",
                                        "format": "email",
                                        "example": "john@example.com"
                                    },
                                    "password": {
                                        "type": "string",
                                        "example": "password123"
                                    },
                                    "remember": {
                                        "type": "boolean",
                                        "default": false,
                                        "example": false
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Login successful",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Login successful"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                },
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "2|eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "expires_in": {
                                                    "type": "integer",
                                                    "example": 86400
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Invalid credentials",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/auth/logout": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "User logout",
                "description": "Logout user and revoke access token",
                "operationId": "a05022a34eef599e04fb0a5254375b84",
                "responses": {
                    "200": {
                        "description": "Logged out successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Logged out successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Logout failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/auth/refresh": {
            "post": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Refresh authentication token",
                "description": "Refresh the current authentication token. The old token will be invalidated.",
                "operationId": "refreshToken",
                "responses": {
                    "200": {
                        "description": "Token refreshed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Token refreshed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "access_token": {
                                                    "type": "string",
                                                    "example": "2|abcdef123456..."
                                                },
                                                "token_type": {
                                                    "type": "string",
                                                    "example": "Bearer"
                                                },
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized - Invalid or expired token",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/auth/profile": {
            "get": {
                "tags": [
                    "Authentication"
                ],
                "summary": "Get user profile",
                "description": "Retrieve authenticated user profile information",
                "operationId": "bc998dce248d856001e74e7beb1239ba",
                "responses": {
                    "200": {
                        "description": "User profile retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "User profile retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "user": {
                                                    "$ref": "#/components/schemas/User"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Profile retrieval failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/bnbs": {
            "get": {
                "tags": [
                    "BNBs"
                ],
                "summary": "List all BNBs",
                "description": "Retrieve a paginated list of BNBs with optional filtering and sorting",
                "operationId": "7f083f33bffbd8d39c954cb8cff06928",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 1,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Number of items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "default": 15,
                            "maximum": 100,
                            "minimum": 1
                        }
                    },
                    {
                        "name": "availability",
                        "in": "query",
                        "description": "Filter by availability status",
                        "required": false,
                        "schema": {
                            "type": "boolean"
                        }
                    },
                    {
                        "name": "location",
                        "in": "query",
                        "description": "Filter by location (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 255
                        }
                    },
                    {
                        "name": "min_price",
                        "in": "query",
                        "description": "Minimum price per night",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "max_price",
                        "in": "query",
                        "description": "Maximum price per night",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "minimum": 0
                        }
                    },
                    {
                        "name": "name",
                        "in": "query",
                        "description": "Filter by name (partial match)",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "maxLength": 100
                        }
                    },
                    {
                        "name": "sort_by",
                        "in": "query",
                        "description": "Field to sort by",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "created_at",
                            "enum": [
                                "id",
                                "name",
                                "location",
                                "price_per_night",
                                "availability",
                                "created_at",
                                "updated_at"
                            ]
                        }
                    },
                    {
                        "name": "sort_direction",
                        "in": "query",
                        "description": "Sort direction",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "default": "desc",
                            "enum": [
                                "asc",
                                "desc"
                            ]
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "List of BNBs with pagination metadata",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BNB"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer"
                                                },
                                                "last_page": {
                                                    "type": "integer"
                                                },
                                                "per_page": {
                                                    "type": "integer"
                                                },
                                                "total": {
                                                    "type": "integer"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "post": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Create a new BNB",
                "description": "Create a new BNB listing with optional image upload (requires authentication)",
                "operationId": "23d9992302c6a19ad0d3affe4d5ba4bd",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location",
                                    "price_per_night"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Cozy Downtown Apartment"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "New York, NY"
                                    },
                                    "price_per_night": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 150
                                    },
                                    "availability": {
                                        "type": "boolean",
                                        "default": true,
                                        "example": true
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "required": [
                                    "name",
                                    "location",
                                    "price_per_night"
                                ],
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Cozy Downtown Apartment"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "New York, NY"
                                    },
                                    "price_per_night": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 150
                                    },
                                    "availability": {
                                        "type": "boolean",
                                        "default": true,
                                        "example": true
                                    },
                                    "image": {
                                        "description": "BNB image file (JPG, PNG, WEBP, GIF - max 10MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "BNB created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BNB"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    },
                    "500": {
                        "description": "Server error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/bnbs/{id}": {
            "get": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Get a specific BNB",
                "description": "Retrieve details of a specific BNB by ID",
                "operationId": "b99b540dcd0127a21963c021896463ed",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BNB details",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BNB"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                }
            },
            "put": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Update a BNB",
                "description": "Update an existing BNB listing (requires authentication)",
                "operationId": "33a74fc7861d99fdfecbda7b38d52899",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": false,
                    "content": {
                        "application/json": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Apartment Name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Los Angeles, CA"
                                    },
                                    "price_per_night": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 175.5
                                    },
                                    "availability": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "image_url": {
                                        "type": "string",
                                        "format": "url",
                                        "example": "https://res.cloudinary.com/demo/image/upload/sample.jpg"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "multipart/form-data": {
                            "schema": {
                                "properties": {
                                    "name": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Updated Apartment Name"
                                    },
                                    "location": {
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Los Angeles, CA"
                                    },
                                    "price_per_night": {
                                        "type": "number",
                                        "minimum": 0,
                                        "example": 175.5
                                    },
                                    "availability": {
                                        "type": "boolean",
                                        "example": false
                                    },
                                    "image": {
                                        "description": "New image file for the BNB (jpeg, jpg, png, webp, gif up to 10MB)",
                                        "type": "string",
                                        "format": "binary"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "BNB updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "data": {
                                            "$ref": "#/components/schemas/BNB"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            },
            "delete": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Delete a BNB",
                "description": "Delete a BNB listing (requires admin privileges)",
                "operationId": "562040f13910cf2adda71e887a08c8f6",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "minimum": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BNB deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Forbidden - Admin privileges required",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/Error"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Invalid ID format",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "$ref": "#/components/schemas/ValidationError"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "sanctum": []
                    }
                ]
            }
        },
        "/bnbs/search/map": {
            "get": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Get BNBs for map display",
                "description": "Retrieve BNBs formatted for map display with coordinates and optimized for zoom levels.",
                "operationId": "getBnbsForMap",
                "parameters": [
                    {
                        "name": "bounds[north]",
                        "in": "query",
                        "description": "Northern boundary latitude",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 90,
                            "minimum": -90,
                            "example": 40.7828
                        }
                    },
                    {
                        "name": "bounds[south]",
                        "in": "query",
                        "description": "Southern boundary latitude",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 90,
                            "minimum": -90,
                            "example": 40.7489
                        }
                    },
                    {
                        "name": "bounds[east]",
                        "in": "query",
                        "description": "Eastern boundary longitude",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 180,
                            "minimum": -180,
                            "example": -73.9441
                        }
                    },
                    {
                        "name": "bounds[west]",
                        "in": "query",
                        "description": "Western boundary longitude",
                        "required": false,
                        "schema": {
                            "type": "number",
                            "format": "float",
                            "maximum": 180,
                            "minimum": -180,
                            "example": -74.0059
                        }
                    },
                    {
                        "name": "zoom_level",
                        "in": "query",
                        "description": "Map zoom level (1-20) for result optimization",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 20,
                            "minimum": 1,
                            "example": 12
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BNBs for map display retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Map data retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "id": {
                                                        "type": "integer",
                                                        "example": 1
                                                    },
                                                    "name": {
                                                        "type": "string",
                                                        "example": "Cozy Downtown Loft"
                                                    },
                                                    "latitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 40.7589
                                                    },
                                                    "longitude": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": -73.9851
                                                    },
                                                    "price_per_night": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 150
                                                    },
                                                    "average_rating": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 4.5
                                                    },
                                                    "total_reviews": {
                                                        "type": "integer",
                                                        "example": 23
                                                    },
                                                    "image_url": {
                                                        "type": "string",
                                                        "example": "https://example.com/image.jpg"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/dashboard/analytics": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get user dashboard analytics",
                "description": "Retrieve analytics data for the authenticated user including BNB statistics, views, and ratings.",
                "operationId": "getUserAnalytics",
                "responses": {
                    "200": {
                        "description": "Analytics data retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "total_bnbs": {
                                                    "type": "integer",
                                                    "example": 5
                                                },
                                                "active_bnbs": {
                                                    "type": "integer",
                                                    "example": 4
                                                },
                                                "total_views": {
                                                    "type": "integer",
                                                    "example": 1250
                                                },
                                                "average_rating": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 4.3
                                                },
                                                "total_reviews": {
                                                    "type": "integer",
                                                    "example": 87
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{id}/analytics": {
            "get": {
                "tags": [
                    "Analytics"
                ],
                "summary": "Get analytics for a specific BNB",
                "description": "Retrieve detailed analytics data for a specific BNB property including views, bookings, ratings, and revenue metrics.",
                "operationId": "getBnbAnalytics",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "period",
                        "in": "query",
                        "description": "Analytics period",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "7days",
                                "30days",
                                "90days",
                                "1year"
                            ],
                            "example": "30days"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "BNB analytics retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB analytics retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "views": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 450
                                                        },
                                                        "period": {
                                                            "type": "integer",
                                                            "example": 125
                                                        },
                                                        "daily_average": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.2
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "bookings": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "integer",
                                                            "example": 23
                                                        },
                                                        "period": {
                                                            "type": "integer",
                                                            "example": 8
                                                        },
                                                        "conversion_rate": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 6.4
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "ratings": {
                                                    "properties": {
                                                        "average": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.7
                                                        },
                                                        "total_reviews": {
                                                            "type": "integer",
                                                            "example": 19
                                                        },
                                                        "rating_distribution": {
                                                            "properties": {
                                                                "5": {
                                                                    "type": "integer",
                                                                    "example": 12
                                                                },
                                                                "4": {
                                                                    "type": "integer",
                                                                    "example": 5
                                                                },
                                                                "3": {
                                                                    "type": "integer",
                                                                    "example": 2
                                                                },
                                                                "2": {
                                                                    "type": "integer",
                                                                    "example": 0
                                                                },
                                                                "1": {
                                                                    "type": "integer",
                                                                    "example": 0
                                                                }
                                                            },
                                                            "type": "object"
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "revenue": {
                                                    "properties": {
                                                        "total": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 3450
                                                        },
                                                        "period": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 1200
                                                        },
                                                        "average_per_booking": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 150
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Access denied - User doesn't own this BNB",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Access denied"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/api/v1/bnbs/featured": {
            "get": {
                "tags": [
                    "BNBs"
                ],
                "summary": "Get featured BNBs",
                "description": "Retrieve a list of featured BNB properties that are highlighted on the platform",
                "operationId": "0dd2bf2502e20896f63ce6758fa6a9c0",
                "responses": {
                    "200": {
                        "description": "Featured BNBs retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Featured BNBs retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/BNB"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "No featured BNBs found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "No featured BNBs available at the moment"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/user/bills": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get user's billing history",
                "description": "Retrieve paginated billing history for the authenticated user including payment records and booking details.",
                "operationId": "getUserBills",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by payment status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "pending",
                                "paid",
                                "cancelled",
                                "refunded"
                            ]
                        }
                    },
                    {
                        "name": "per_page",
                        "in": "query",
                        "description": "Items per page",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "maximum": 100,
                            "minimum": 1,
                            "example": 15
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bills retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bills retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "$ref": "#/components/schemas/Bill"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bills/{id}": {
            "get": {
                "tags": [
                    "Billing"
                ],
                "summary": "Get bill details",
                "description": "Retrieve detailed information about a specific bill including payment details and booking information.",
                "operationId": "getBillDetails",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bill details retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bill details retrieved successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Bill"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Bill not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Bill not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bills/{id}/pay": {
            "post": {
                "tags": [
                    "Billing"
                ],
                "summary": "Process payment for a bill",
                "description": "Process payment for a pending bill using the specified payment method.",
                "operationId": "payBill",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Bill ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "payment_method"
                                ],
                                "properties": {
                                    "payment_method": {
                                        "type": "string",
                                        "enum": [
                                            "credit_card",
                                            "debit_card",
                                            "paypal",
                                            "bank_transfer"
                                        ],
                                        "example": "credit_card"
                                    },
                                    "payment_token": {
                                        "type": "string",
                                        "example": "tok_1234567890abcdef"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Payment processed successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment processed successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "payment_id": {
                                                    "type": "string",
                                                    "example": "pay_1234567890"
                                                },
                                                "status": {
                                                    "type": "string",
                                                    "example": "paid"
                                                },
                                                "paid_at": {
                                                    "type": "string",
                                                    "format": "date-time",
                                                    "example": "2025-09-08T14:30:00.000000Z"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Payment failed",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Payment processing failed"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/health": {
            "get": {
                "tags": [
                    "Health Check"
                ],
                "summary": "Basic health check",
                "description": "Simple health check endpoint for load balancers and monitoring",
                "operationId": "24e9885a67c9c1036351960319bf0ccb",
                "responses": {
                    "200": {
                        "description": "API is operational",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "status": {
                                            "type": "string",
                                            "example": "ok"
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB Management API is operational"
                                        },
                                        "timestamp": {
                                            "type": "string",
                                            "format": "date-time",
                                            "example": "2025-09-05T12:00:00.000000Z"
                                        },
                                        "version": {
                                            "type": "string",
                                            "example": "v1"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                }
            }
        },
        "/notifications": {
            "get": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Get user notifications",
                "description": "Retrieve paginated list of user's notifications, ordered by most recent first.",
                "operationId": "getUserNotifications",
                "parameters": [
                    {
                        "name": "page",
                        "in": "query",
                        "description": "Page number for pagination",
                        "required": false,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notifications retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "data": {
                                            "properties": {
                                                "data": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "id": {
                                                                "type": "string",
                                                                "example": "uuid-string"
                                                            },
                                                            "type": {
                                                                "type": "string",
                                                                "example": "App\\\\Notifications\\\\BookingConfirmation"
                                                            },
                                                            "data": {
                                                                "properties": {
                                                                    "title": {
                                                                        "type": "string",
                                                                        "example": "New Review"
                                                                    },
                                                                    "message": {
                                                                        "type": "string",
                                                                        "example": "You received a new review"
                                                                    }
                                                                },
                                                                "type": "object"
                                                            },
                                                            "read_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "created_at": {
                                                                "type": "string",
                                                                "format": "date-time",
                                                                "example": "2025-09-08T10:00:00.000000Z"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                },
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notifications/{id}/mark-read": {
            "patch": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Mark notification as read",
                "description": "Mark a specific notification as read for the authenticated user.",
                "operationId": "markNotificationAsRead",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification marked as read",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification marked as read"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/notifications/{id}": {
            "delete": {
                "tags": [
                    "Notifications"
                ],
                "summary": "Delete notification",
                "description": "Delete a specific notification for the authenticated user.",
                "operationId": "deleteNotification",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "Notification ID",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "example": "uuid-string"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Notification deleted successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification deleted successfully"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "Notification not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Notification not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthenticated",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{bnb}/availability": {
            "get": {
                "tags": [
                    "Availability"
                ],
                "summary": "Get availability calendar",
                "description": "Get availability calendar for a date range with pricing information.",
                "operationId": "getBNBAvailabilityCalendar",
                "parameters": [
                    {
                        "name": "bnb",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    },
                    {
                        "name": "start_date",
                        "in": "query",
                        "description": "Start date for calendar",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-01"
                        }
                    },
                    {
                        "name": "end_date",
                        "in": "query",
                        "description": "End date for calendar",
                        "required": true,
                        "schema": {
                            "type": "string",
                            "format": "date",
                            "example": "2025-12-31"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Availability calendar retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Availability calendar retrieved successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "bnb": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Downtown Apartment"
                                                        },
                                                        "default_price": {
                                                            "type": "string",
                                                            "example": "150.00"
                                                        },
                                                        "default_availability": {
                                                            "type": "boolean",
                                                            "example": true
                                                        }
                                                    },
                                                    "type": "object"
                                                },
                                                "calendar": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-12-01"
                                                            },
                                                            "is_available": {
                                                                "type": "boolean",
                                                                "example": true
                                                            },
                                                            "price_override": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": null,
                                                                "nullable": true
                                                            },
                                                            "effective_price": {
                                                                "type": "string",
                                                                "example": "150.00"
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{bnb}/availability/update": {
            "patch": {
                "tags": [
                    "Availability"
                ],
                "summary": "Update availability for dates",
                "description": "Update availability and pricing for specific dates (property owners only).",
                "operationId": "updateBNBAvailability",
                "parameters": [
                    {
                        "name": "bnb",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "dates"
                                ],
                                "properties": {
                                    "dates": {
                                        "type": "array",
                                        "items": {
                                            "required": [
                                                "date",
                                                "is_available"
                                            ],
                                            "properties": {
                                                "date": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-12-25"
                                                },
                                                "is_available": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "price_override": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 200,
                                                    "nullable": true
                                                }
                                            },
                                            "type": "object"
                                        }
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Availability updated successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Availability updated successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "properties": {
                                                    "date": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-12-25"
                                                    },
                                                    "is_available": {
                                                        "type": "boolean",
                                                        "example": true
                                                    },
                                                    "price_override": {
                                                        "type": "number",
                                                        "format": "float",
                                                        "example": 200
                                                    },
                                                    "effective_price": {
                                                        "type": "string",
                                                        "example": "200.00"
                                                    }
                                                },
                                                "type": "object"
                                            }
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "403": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthorized"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{bnb}/availability/check": {
            "post": {
                "tags": [
                    "Availability"
                ],
                "summary": "Check availability for date range",
                "description": "Check if a BNB is available for specific dates and get pricing breakdown.",
                "operationId": "checkBNBAvailability",
                "parameters": [
                    {
                        "name": "bnb",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "check_in",
                                    "check_out"
                                ],
                                "properties": {
                                    "check_in": {
                                        "description": "Check-in date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-01"
                                    },
                                    "check_out": {
                                        "description": "Check-out date",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-07"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Availability checked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Availability checked successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "is_available": {
                                                    "type": "boolean",
                                                    "example": true
                                                },
                                                "check_in": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-12-01"
                                                },
                                                "check_out": {
                                                    "type": "string",
                                                    "format": "date",
                                                    "example": "2025-12-07"
                                                },
                                                "nights": {
                                                    "type": "integer",
                                                    "example": 6
                                                },
                                                "total_price": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 900
                                                },
                                                "average_price_per_night": {
                                                    "type": "number",
                                                    "format": "float",
                                                    "example": 150
                                                },
                                                "price_breakdown": {
                                                    "type": "array",
                                                    "items": {
                                                        "properties": {
                                                            "date": {
                                                                "type": "string",
                                                                "format": "date",
                                                                "example": "2025-12-01"
                                                            },
                                                            "price": {
                                                                "type": "number",
                                                                "format": "float",
                                                                "example": 150
                                                            }
                                                        },
                                                        "type": "object"
                                                    }
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{bnb}/availability/block": {
            "post": {
                "tags": [
                    "Availability"
                ],
                "summary": "Block dates",
                "description": "Block multiple dates at once making them unavailable for booking.",
                "operationId": "blockBNBDates",
                "parameters": [
                    {
                        "name": "bnb",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "start_date",
                                    "end_date"
                                ],
                                "properties": {
                                    "start_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-24"
                                    },
                                    "end_date": {
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-12-26"
                                    },
                                    "reason": {
                                        "type": "string",
                                        "example": "Holiday period - not available",
                                        "nullable": true
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "200": {
                        "description": "Dates blocked successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Dates blocked successfully"
                                        },
                                        "data": {
                                            "properties": {
                                                "blocked_dates": {
                                                    "type": "array",
                                                    "items": {
                                                        "type": "string",
                                                        "format": "date",
                                                        "example": "2025-12-24"
                                                    }
                                                },
                                                "reason": {
                                                    "type": "string",
                                                    "example": "Holiday period - not available"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/bnbs/{id}/reviews": {
            "get": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Get reviews for a specific BNB",
                "description": "Retrieve paginated reviews for a BNB property with user information and BNB details.",
                "operationId": "getBNBReviews",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Reviews retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Reviews retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/Review"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 3
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 42
                                                },
                                                "bnb_info": {
                                                    "properties": {
                                                        "id": {
                                                            "type": "integer",
                                                            "example": 1
                                                        },
                                                        "name": {
                                                            "type": "string",
                                                            "example": "Downtown Apartment"
                                                        },
                                                        "average_rating": {
                                                            "type": "number",
                                                            "format": "float",
                                                            "example": 4.2
                                                        },
                                                        "total_reviews": {
                                                            "type": "integer",
                                                            "example": 42
                                                        }
                                                    },
                                                    "type": "object"
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "404": {
                        "description": "BNB not found",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "BNB not found"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Reviews"
                ],
                "summary": "Create a new review for a BNB",
                "description": "Submit a review and rating for a BNB property. Users can only review each property once.",
                "operationId": "createBNBReview",
                "parameters": [
                    {
                        "name": "id",
                        "in": "path",
                        "description": "BNB property ID",
                        "required": true,
                        "schema": {
                            "type": "integer",
                            "example": 1
                        }
                    }
                ],
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "rating",
                                    "comment"
                                ],
                                "properties": {
                                    "rating": {
                                        "description": "Rating from 1 to 5 stars",
                                        "type": "integer",
                                        "maximum": 5,
                                        "minimum": 1,
                                        "example": 5
                                    },
                                    "comment": {
                                        "description": "Review comment",
                                        "type": "string",
                                        "maxLength": 1000,
                                        "example": "Amazing property! Clean and comfortable."
                                    },
                                    "feedback_categories": {
                                        "description": "Optional feedback categories",
                                        "type": "array",
                                        "items": {
                                            "type": "string"
                                        },
                                        "example": [
                                            "cleanliness",
                                            "communication"
                                        ]
                                    },
                                    "stay_date": {
                                        "description": "Date of stay (optional)",
                                        "type": "string",
                                        "format": "date",
                                        "example": "2025-08-15"
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Review created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Review created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/Review"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error or duplicate review",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "You have already reviewed this BNB"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        },
        "/support/tickets": {
            "get": {
                "tags": [
                    "Support"
                ],
                "summary": "Get user's support tickets",
                "description": "Retrieve paginated list of support tickets for the authenticated user with filtering options.",
                "operationId": "getUserSupportTickets",
                "parameters": [
                    {
                        "name": "status",
                        "in": "query",
                        "description": "Filter by ticket status",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "open",
                                "in_progress",
                                "resolved",
                                "closed"
                            ],
                            "example": "open"
                        }
                    },
                    {
                        "name": "priority",
                        "in": "query",
                        "description": "Filter by ticket priority",
                        "required": false,
                        "schema": {
                            "type": "string",
                            "enum": [
                                "low",
                                "medium",
                                "high",
                                "urgent"
                            ],
                            "example": "high"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Support tickets retrieved successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Support tickets retrieved successfully"
                                        },
                                        "data": {
                                            "type": "array",
                                            "items": {
                                                "$ref": "#/components/schemas/SupportTicket"
                                            }
                                        },
                                        "meta": {
                                            "properties": {
                                                "current_page": {
                                                    "type": "integer",
                                                    "example": 1
                                                },
                                                "last_page": {
                                                    "type": "integer",
                                                    "example": 2
                                                },
                                                "per_page": {
                                                    "type": "integer",
                                                    "example": 15
                                                },
                                                "total": {
                                                    "type": "integer",
                                                    "example": 23
                                                }
                                            },
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            },
            "post": {
                "tags": [
                    "Support"
                ],
                "summary": "Create a new support ticket",
                "description": "Submit a new support ticket with auto-generated ticket number and priority handling.",
                "operationId": "createSupportTicket",
                "requestBody": {
                    "required": true,
                    "content": {
                        "application/json": {
                            "schema": {
                                "required": [
                                    "subject",
                                    "message"
                                ],
                                "properties": {
                                    "subject": {
                                        "description": "Ticket subject",
                                        "type": "string",
                                        "maxLength": 255,
                                        "example": "Login Issue"
                                    },
                                    "message": {
                                        "description": "Detailed message",
                                        "type": "string",
                                        "maxLength": 2000,
                                        "example": "I'm having trouble accessing my account"
                                    },
                                    "priority": {
                                        "description": "Ticket priority (default: medium)",
                                        "type": "string",
                                        "enum": [
                                            "low",
                                            "medium",
                                            "high",
                                            "urgent"
                                        ],
                                        "example": "medium"
                                    },
                                    "category": {
                                        "description": "Ticket category (default: general)",
                                        "type": "string",
                                        "enum": [
                                            "technical",
                                            "billing",
                                            "general",
                                            "booking",
                                            "account"
                                        ],
                                        "example": "technical"
                                    },
                                    "attachments": {
                                        "description": "Optional file attachments (max 5)",
                                        "type": "array",
                                        "items": {
                                            "type": "string",
                                            "format": "url"
                                        },
                                        "example": [
                                            "https://example.com/file1.jpg"
                                        ]
                                    }
                                },
                                "type": "object"
                            }
                        }
                    }
                },
                "responses": {
                    "201": {
                        "description": "Support ticket created successfully",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": true
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Support ticket created successfully"
                                        },
                                        "data": {
                                            "$ref": "#/components/schemas/SupportTicket"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "Unauthenticated"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    },
                    "422": {
                        "description": "Validation error",
                        "content": {
                            "application/json": {
                                "schema": {
                                    "properties": {
                                        "success": {
                                            "type": "boolean",
                                            "example": false
                                        },
                                        "message": {
                                            "type": "string",
                                            "example": "The given data was invalid."
                                        },
                                        "errors": {
                                            "type": "object"
                                        }
                                    },
                                    "type": "object"
                                }
                            }
                        }
                    }
                },
                "security": [
                    {
                        "bearerAuth": []
                    }
                ]
            }
        }
    },
    "components": {
        "schemas": {
            "Bill": {
                "title": "Bill",
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "booking_reference": {
                        "type": "string",
                        "example": "BK-20250908-001"
                    },
                    "user_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "bnb_id": {
                        "type": "integer",
                        "example": 1
                    },
                    "amount": {
                        "type": "string",
                        "example": "450.00"
                    },
                    "tax_amount": {
                        "type": "string",
                        "example": "67.50"
                    },
                    "total_amount": {
                        "type": "string",
                        "example": "517.50"
                    },
                    "currency": {
                        "type": "string",
                        "example": "USD"
                    },
                    "status": {
                        "type": "string",
                        "enum": [
                            "pending",
                            "paid",
                            "cancelled",
                            "refunded"
                        ],
                        "example": "paid"
                    },
                    "payment_method": {
                        "type": "string",
                        "example": "Credit Card"
                    },
                    "transaction_id": {
                        "type": "string",
                        "example": "txn_1234567890"
                    },
                    "check_in_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-15"
                    },
                    "check_out_date": {
                        "type": "string",
                        "format": "date",
                        "example": "2025-08-18"
                    },
                    "nights": {
                        "type": "integer",
                        "example": 3
                    },
                    "guests": {
                        "type": "integer",
                        "example": 2
                    },
                    "paid_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-10T14:30:00.000000Z",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-10T10:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-08-10T14:30:00.000000Z"
                    },
                    "bnb": {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "name": {
                                "type": "string",
                                "example": "Downtown Apartment"
                            },
                            "location": {
                                "type": "string",
                                "example": "New York, NY"
                            }
                        },
                        "type": "object"
                    }
                },
                "type": "object"
            },
            "BNB": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "Cozy Downtown Apartment"
                    },
                    "location": {
                        "type": "string",
                        "example": "New York, NY"
                    },
                    "price_per_night": {
                        "type": "string",
                        "example": "150.00"
                    },
                    "availability": {
                        "type": "boolean",
                        "example": true
                    },
                    "image_url": {
                        "type": "string",
                        "example": "https://res.cloudinary.com/demo/image/upload/sample.jpg",
                        "nullable": true
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T08:00:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T09:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "User": {
                "properties": {
                    "id": {
                        "type": "integer",
                        "example": 1
                    },
                    "name": {
                        "type": "string",
                        "example": "John Doe"
                    },
                    "email": {
                        "type": "string",
                        "format": "email",
                        "example": "john@example.com"
                    },
                    "role": {
                        "type": "string",
                        "enum": [
                            "admin",
                            "user"
                        ],
                        "example": "user"
                    },
                    "created_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T10:30:00.000000Z"
                    },
                    "updated_at": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T10:30:00.000000Z"
                    }
                },
                "type": "object"
            },
            "Error": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "error": {
                        "type": "string",
                        "example": "Not Found"
                    },
                    "message": {
                        "type": "string",
                        "example": "The requested resource was not found"
                    },
                    "timestamp": {
                        "type": "string",
                        "format": "date-time",
                        "example": "2025-09-05T12:00:00.000000Z"
                    }
                },
                "type": "object"
            },
            "ValidationError": {
                "properties": {
                    "success": {
                        "type": "boolean",
                        "example": false
                    },
                    "error": {
                        "type": "string",
                        "example": "Validation failed"
                    },
                    "message": {
                        "type": "string",
                        "example": "The given data was invalid"
                    },
                    "errors": {
                        "type": "object",
                        "example": {
                            "email": [
                                "The email field is required."
                            ],
                            "password": [
                                "The password field is required."
                            ]
                        },
                        "additionalProperties": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    }
                },
                "type": "object"
            },
            "Review": {
                "title": "Review",
                "description": "Review model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "bnb_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "rating": {
                                "type": "integer",
                                "maximum": 5,
                                "minimum": 1,
                                "example": 5
                            },
                            "comment": {
                                "type": "string",
                                "example": "Amazing place to stay!"
                            },
                            "is_verified": {
                                "type": "boolean",
                                "example": true
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-08T10:00:00.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-08T10:00:00.000000Z"
                            },
                            "user": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            },
                            "bnb": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "title": {
                                        "type": "string",
                                        "example": "Beautiful Beach House"
                                    },
                                    "location": {
                                        "type": "string",
                                        "example": "Miami, FL"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            },
            "SupportTicket": {
                "title": "SupportTicket",
                "description": "Support ticket model",
                "type": "object",
                "allOf": [
                    {
                        "$ref": "#/components/schemas/ValidationError"
                    },
                    {
                        "properties": {
                            "id": {
                                "type": "integer",
                                "example": 1
                            },
                            "user_id": {
                                "type": "integer",
                                "example": 1
                            },
                            "subject": {
                                "type": "string",
                                "example": "Issue with booking"
                            },
                            "message": {
                                "type": "string",
                                "example": "I'm having trouble with my booking..."
                            },
                            "status": {
                                "type": "string",
                                "enum": [
                                    "open",
                                    "in_progress",
                                    "resolved",
                                    "closed"
                                ],
                                "example": "open"
                            },
                            "priority": {
                                "type": "string",
                                "enum": [
                                    "low",
                                    "medium",
                                    "high",
                                    "urgent"
                                ],
                                "example": "medium"
                            },
                            "category": {
                                "type": "string",
                                "example": "booking"
                            },
                            "created_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-08T10:00:00.000000Z"
                            },
                            "updated_at": {
                                "type": "string",
                                "format": "date-time",
                                "example": "2025-09-08T10:00:00.000000Z"
                            },
                            "user": {
                                "properties": {
                                    "id": {
                                        "type": "integer",
                                        "example": 1
                                    },
                                    "name": {
                                        "type": "string",
                                        "example": "John Doe"
                                    },
                                    "email": {
                                        "type": "string",
                                        "example": "john@example.com"
                                    }
                                },
                                "type": "object"
                            }
                        },
                        "type": "object"
                    }
                ]
            }
        },
        "securitySchemes": {
            "sanctum": {
                "type": "http",
                "bearerFormat": "JWT",
                "scheme": "bearer"
            }
        }
    },
    "tags": [
        {
            "name": "Admin",
            "description": "Administrative endpoints (Admin role required)"
        },
        {
            "name": "Authentication",
            "description": "User authentication and authorization endpoints"
        },
        {
            "name": "BNBs",
            "description": "BNB Management endpoints"
        },
        {
            "name": "Billing",
            "description": "Billing and payment management endpoints"
        },
        {
            "name": "Health Check",
            "description": "System health monitoring endpoints"
        },
        {
            "name": "Notifications",
            "description": "Notification management endpoints"
        },
        {
            "name": "Availability",
            "description": "Calendar and availability management endpoints"
        },
        {
            "name": "Analytics",
            "description": "Analytics"
        },
        {
            "name": "Reviews",
            "description": "Reviews"
        },
        {
            "name": "Support",
            "description": "Support"
        }
    ]
}